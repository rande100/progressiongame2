{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../GameLog.svelte",
    "../Mobs.svelte",
    "../Party.svelte",
    "../Player.svelte",
    "../PlayerInventory.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n\timport { beforeUpdate, afterUpdate } from \"svelte\";\r\n\r\n\texport let gameLog;\r\n\r\n\tlet autoscrollContainer;\r\n\tlet autoscroll;\r\n\r\n\tbeforeUpdate(() => {\r\n\t  autoscroll =\r\n\t    autoscrollContainer &&\r\n\t    autoscrollContainer.offsetHeight + autoscrollContainer.scrollTop >\r\n\t      autoscrollContainer.scrollHeight - 20;\r\n\t});\r\n\r\n\tafterUpdate(() => {\r\n\t  if (autoscroll)\r\n\t    autoscrollContainer.scrollTo(0, autoscrollContainer.scrollHeight);\r\n\t});\r\n</script>\r\n\r\n<style>\r\n  .game-log {\r\n    height: 400px;\r\n    overflow-y: scroll;\r\n  }\r\n  .game-log ul {\r\n    list-style-type: none;\r\n  }\r\n</style>\r\n\r\n<h4>Game Log</h4>\r\n\r\n<div class=\"game-log\" bind:this={autoscrollContainer}>\r\n  <ul>\r\n    {#each gameLog as message}\r\n      <li>{@html message}</li>\r\n    {/each}\r\n  </ul>\r\n</div>",
    "<script>\r\n  export let mobs;\r\n</script>\r\n\r\n<style>\r\n  .mobModel {\r\n    width: 64px;\r\n    height: 64px;\r\n    background-color: #dddddd;\r\n  }\r\n</style>\r\n\r\n<h4>Mobs</h4>\r\n\r\n<div class=\"mobs\">\r\n  {#each Object.values(mobs) as mob}\r\n  <div class=\"mob\">\r\n    <div><div class=\"mobModel\" id=\"mobModel\"></div></div>\r\n    <div><meter value=\"{mob.health / mob.maxHealth}\"></meter></div>\r\n    <div><strong>{mob.name}</strong> (Level {mob.level}{mob.boss ? \" Boss\" : \"\"})</div>\r\n    <div>HP {mob.health}/{mob.maxHealth}</div>\r\n  </div>\r\n  {/each}\r\n</div>\r\n",
    "<script>\r\n  export let party;\r\n  export let socket;\r\n\r\n  const resurrect = event => {\r\n    socket.emit(\"player resurrect\");\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .party {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n  .party-member {\r\n    margin-right: 1em;\r\n    margin-bottom: 1em;\r\n  }\r\n  .party-member-model {\r\n    width: 64px;\r\n    height: 64px;\r\n    background-color: #dddddd;\r\n  }\r\n</style>\r\n\r\n<h4>Party</h4>\r\n<div class=\"party\">\r\n  {#each Object.values(party) as partyMember}\r\n  <div class=\"party-member\">\r\n    <div><div class=\"party-member-model\" id=\"party-member-model-{partyMember.id}\"></div></div>\r\n    <div><meter value=\"{partyMember.health / partyMember.maxHealth}\"></meter></div>\r\n    <div><strong>{partyMember.name}</strong></div>\r\n    <div>HP {partyMember.health}/{partyMember.maxHealth}</div>\r\n    <div>Level {partyMember.level}</div>\r\n\r\n    {#if partyMember.health === 0}\r\n      <div><button type=\"button\" on:click={resurrect}>Resurrect</button></div>\r\n    {/if}\r\n\r\n  </div>\r\n  {/each}\r\n</div>",
    "<script>\r\n export let player;\r\n export let socket;\r\n\r\n const spendAttr = event => {\r\n   socket.emit(\"player spend attribute\", event.target.dataset.spendattrchoice);\r\n };\r\n\r\n const changeName = event => {\r\n   let name = document.getElementById(\"change-name-input\").value;\r\n   if (name.length === 0) return false;\r\n\r\n   socket.emit(\"player change name\", name);\r\n };\r\n</script>\r\n\r\n<style>\r\n  .stat-calc {\r\n    font-size: 0.75em;\r\n  }\r\n</style>\r\n\r\n<h4>Player</h4>\r\n\r\n{#if player.baseStats}\r\n\r\n  <div>\r\n    <form id=\"change-name\" on:submit|preventDefault={changeName}>\r\n      <input type=\"text\" id=\"change-name-input\" value=\"\" placeholder=\"Name\" />\r\n      <input type=\"submit\" value=\"Save\" />\r\n    </form>\r\n  </div>\r\n  <div>Level: {player.level}</div>\r\n  <div>XP: {player.xp}/{player.level * 10}</div>\r\n  <div>\r\n    Weapon Damage:\r\n    {player.totalStats.damage}\r\n  </div>\r\n  <div>\r\n    Armor:\r\n    {player.totalStats.armor}\r\n  </div>\r\n  <div>\r\n    Strength: {player.totalStats.strength}\r\n\r\n    {#if player.baseStats.unspent > 0}\r\n      <button type=\"button\" data-spendattrchoice=\"strength\" on:click={spendAttr}>+</button>\r\n    {/if}\r\n\r\n    <span class=\"stat-calc\">({player.baseStats.strength} + {player.gearStats.strength})</span>\r\n  </div>\r\n  <div>\r\n    Agility: {player.totalStats.agility}\r\n\r\n    {#if player.baseStats.unspent > 0}\r\n      <button type=\"button\" data-spendattrchoice=\"agility\" on:click={spendAttr}>+</button>\r\n    {/if}\r\n\r\n    <span class=\"stat-calc\">({player.baseStats.agility} + {player.gearStats.agility})</span>\r\n  </div>\r\n  <div>\r\n    Intelligence: {player.totalStats.intelligence}\r\n\r\n    {#if player.baseStats.unspent > 0}\r\n      <button type=\"button\" data-spendattrchoice=\"intelligence\" on:click={spendAttr}>+</button>\r\n    {/if}\r\n\r\n    <span class=\"stat-calc\">({player.baseStats.intelligence} + {player.gearStats.intelligence})</span>\r\n  </div>\r\n  {#if player.baseStats.unspent > 0}\r\n  <div style=\"color: green;\">\r\n    Unspent: {player.baseStats.unspent}\r\n  </div>\r\n  {/if}\r\n\r\n{:else}\r\n\r\n  <div>Loading...</div>\r\n\r\n{/if}\r\n\r\n<h4>Debug</h4>\r\n\r\n<div style=\"overflow: scroll; max-width: 400px; max-height: 200px;\">{JSON.stringify(player)}</div>\r\n",
    "<script>\r\n  import { beforeUpdate, afterUpdate } from \"svelte\";\r\n  import { formatGear } from \"../libraries/Gear.js\";\r\n\r\n  export let player;\r\n  export let socket;\r\n\r\n  let autoscrollContainer;\r\n  let autoscroll;\r\n\r\n  const equipItem = event => {\r\n    socket.emit(\"player equip item\", event.target.dataset.inventoryid);\r\n  };\r\n\r\n  beforeUpdate(() => {\r\n    autoscroll =\r\n      autoscrollContainer &&\r\n      autoscrollContainer.offsetHeight + autoscrollContainer.scrollTop >\r\n        autoscrollContainer.scrollHeight - 20;\r\n  });\r\n\r\n  afterUpdate(() => {\r\n    if (autoscroll)\r\n      autoscrollContainer.scrollTo(0, autoscrollContainer.scrollHeight);\r\n  });\r\n</script>\r\n\r\n<style>\r\n  .player-inventory {\r\n    height: 200px;\r\n    overflow-y: scroll;\r\n  }\r\n  .player-inventory ul {\r\n    list-style-type: none;\r\n  }\r\n</style>\r\n\r\n<h4>Inventory</h4>\r\n\r\n<div class=\"player-inventory\" bind:this={autoscrollContainer}>\r\n  <ul>\r\n  {#if player.inventory}\r\n    {#each player.inventory as item, id}\r\n      <li>{@html formatGear(item)}\r\n      <button type=\"button\" data-inventoryid=\"{id}\" on:click={equipItem}>Equip</button>\r\n      </li>\r\n    {:else}\r\n      <li>None</li>\r\n    {/each}\r\n  {/if}\r\n  </ul>\r\n</div>"
  ],
  "names": [],
  "mappings": "AAsBE,SAAS,4BAAC,CAAC,AACT,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,uBAAS,CAAC,EAAE,cAAC,CAAC,AACZ,eAAe,CAAE,IAAI,AACvB,CAAC;ACvBD,SAAS,eAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,AAC3B,CAAC;ACCD,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,aAAa,cAAC,CAAC,AACb,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,mBAAmB,cAAC,CAAC,AACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,AAC3B,CAAC;ACND,UAAU,cAAC,CAAC,AACV,SAAS,CAAE,MAAM,AACnB,CAAC;ACSD,iBAAiB,8BAAC,CAAC,AACjB,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,MAAM,AACpB,CAAC,AACD,gCAAiB,CAAC,EAAE,eAAC,CAAC,AACpB,eAAe,CAAE,IAAI,AACvB,CAAC"
}